@model Cafeteria.Models.Purchase

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="espacio row justify-content-center">
        <div class="col-md-5">
            <div class="card" style="width:25rem;">
                <div class="card-header bg-success text-white text-center">Información de Nota No. @Model.Id </div>
                <div class="card-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            <label class="font-weight-bold font-italic text-success">Nombre de Cliente:</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="font-weight-bold font-italic text-success">Nombre de Cliente:</label>
                            <div class="col-md-10">
                                <select name="ProductId" class="form-control product" id="productName">
                                    <option selected disabled>Elige un producto:</option>
                                    @foreach (var item in ViewBag.Products)
                                    {
                                        <option value="@item.Id">@item.ProductName — $@item.Price</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="font-weight-bold font-italic text-success">Cantidad:</label>
                            <div class="col-md-10">
                                <input type="text" name="Quantity" value="@Model.Quantity" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="font-weight-bold font-italic text-success">Comentario:</label>
                            <div class="col-md-10">
                                <input type="text" name="Comment" value="@Model.Comment" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="font-weight-bold font-italic text-success">¿Qué quieres comprar?</label>
                            <div class="col-md-10">
                                <select name="Status" class="form-control">
                                    <option selected disabled>Elige el estatus actual:</option>
                                    <option value="Pendiente">Pendiente</option>
                                    <option value="Pendiente">En proceso</option>
                                    <option value="Pendiente">Terminado</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group text-center">
                            <input type="submit" name="btnGuardar" value="Guardar" class="btn btn-sm btn-success" />
                            <a href="@Url.Action("Index","Purchases")" class="btn btn-sm btn-dark text-white" style="margin: 0.5rem;"><i class="fas fa-fast-backward"></i> Regresar</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<h2>Edit</h2>

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Purchase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
